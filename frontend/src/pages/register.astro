---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Sign Up">
  <div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 px-4">
    <div class="max-w-md w-full bg-white rounded-lg shadow-xl p-8">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Create Account</h1>
        <p class="text-gray-600">Join YoutubeTalker today</p>
      </div>

      <form id="registerForm" class="space-y-6">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
            Email
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition"
            placeholder="your@email.com"
          />
        </div>

        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
            Password
          </label>
          <input
            type="password"
            id="password"
            name="password"
            required
            minlength="8"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition"
            placeholder="••••••••"
          />
          <p class="mt-1 text-xs text-gray-500">At least 8 characters</p>
        </div>

        <div>
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-2">
            Confirm Password
          </label>
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            required
            minlength="8"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition"
            placeholder="••••••••"
          />
        </div>

        <div id="errorMessage" class="hidden text-sm text-red-600 bg-red-50 border border-red-200 rounded-lg p-3">
        </div>

        <button
          type="submit"
          class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-4 rounded-lg transition duration-200 ease-in-out transform hover:scale-[1.02] focus:ring-4 focus:ring-blue-200 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Create Account
        </button>
      </form>

      <div class="mt-6 text-center text-sm text-gray-600">
        Already have an account?
        <a href="/" class="text-blue-600 hover:text-blue-700 font-medium">
          Sign in
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { register } from '../lib/api';
  import { setAuth } from '../stores/auth';

  const form = document.getElementById('registerForm') as HTMLFormElement;
  const emailInput = document.getElementById('email') as HTMLInputElement;
  const passwordInput = document.getElementById('password') as HTMLInputElement;
  const confirmPasswordInput = document.getElementById('confirmPassword') as HTMLInputElement;
  const errorMessage = document.getElementById('errorMessage') as HTMLDivElement;
  const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Hide previous errors
    errorMessage.classList.add('hidden');

    // Get form values
    const email = emailInput.value.trim();
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;

    // Client-side validation
    if (password !== confirmPassword) {
      errorMessage.textContent = 'Passwords do not match';
      errorMessage.classList.remove('hidden');
      return;
    }

    if (password.length < 8) {
      errorMessage.textContent = 'Password must be at least 8 characters';
      errorMessage.classList.remove('hidden');
      return;
    }

    // Disable form during submission
    submitButton.disabled = true;
    submitButton.textContent = 'Creating account...';

    try {
      // Call register API
      const response = await register(email, password);

      // Save auth state (auto-login)
      setAuth(response.token, response.user);

      // Redirect to chat
      window.location.href = '/chat';
    } catch (error) {
      // Show error message
      errorMessage.textContent = error instanceof Error ? error.message : 'Registration failed';
      errorMessage.classList.remove('hidden');

      // Re-enable form
      submitButton.disabled = false;
      submitButton.textContent = 'Create Account';
    }
  });
</script>
