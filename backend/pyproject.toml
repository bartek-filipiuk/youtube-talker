[project]
name = "youtube-talker"
version = "0.1.0"
description = "AI-powered YouTube video Q&A and content generation"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # FastAPI
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",

    # Database
    "sqlalchemy[asyncio]>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",

    # Pydantic
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # LangChain & LangGraph
    "langchain>=0.1.0",
    "langgraph>=0.0.20",
    "langchain-openai>=0.0.2",

    # Vector DB
    "qdrant-client>=1.7.0",

    # HTTP Client
    "httpx>=0.26.0",

    # Security
    "bcrypt>=4.1.0",
    "python-multipart>=0.0.6",

    # Utilities
    "tiktoken>=0.5.0",
    "tenacity>=8.2.0",
    "jinja2>=3.1.0",
    "python-dotenv>=1.0.0",

    # Rate Limiting
    "slowapi>=0.1.9",

    # WebSockets
    "websockets>=12.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.26.0",  # for TestClient

    # Linting & Formatting
    "ruff>=0.1.0",
    "black>=23.12.0",

    # Type checking
    "mypy>=1.8.0",
]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*", "alembic*", "templates*", "scripts*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
